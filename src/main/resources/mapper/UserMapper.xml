<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liao.hw.mbg.mapper.UserMapper">

    <!--后台字段-->
    <sql id="column">
        a.id AS "id",
        a.open_id AS "openId",
        a.union_id AS "unionId",
        a.nick_name AS "nickName",
        a.avatar_url AS "avatarUrl",
        a.gender AS "gender",
        a.city AS "city",
        a.province AS "province",
        a.phone AS "phone",
        a.create_date AS "createDate",
        a.update_date AS "updateDate",
        a.del_flag AS "delFlag"
    </sql>

    <!--api字段-->
    <sql id="column2">
        a.open_id AS "openId",
        a.nick_name AS "nickName",
        a.avatar_url AS "avatarUrl"
    </sql>

    <!--查询是否存在用户-->
    <select id="findUserByOpenId" resultType="User">
      SELECT
        <include refid="column"></include>
      FROM user a
      WHERE open_id = #{openId}
    </select>

    <insert id="insert">
        INSERT INTO user
        (
          id,
          open_id,
          union_id,
          nick_name,
          avatar_url,
          gender,
          city,
          province,
          phone,
          create_date
        ) VALUES (
          #{id}
          #{openId},
          #{unionId},
          #{nickName},
          #{avatarUrl},
          #{gender},
          #{city},
          #{province},
          #{phone},
          NOW()
        )
    </insert>

    <!--存在用户只更新update_date-->
    <update id="updateDate">
        UPDATE user SET update_date = NOW() WHERE id = #{token}
    </update>

    <!--后台更新-->
    <update id="update">
        UPDATE user SET
          open_id = #{openId},
          union_id = #{unionId},
          nick_name = #{nickName},
          avatar_url = #{avatarUrl},
          gender = #{gender},
          city = #{city},
          province = #{province},
          phone = #{phone},
          create_date = #{createDate},
          update_date = NOW()
        WHERE id = #{id}
    </update>

    <!--根据token获取用户信息-->
    <select id="findUserById" resultType="User">
        SELECT
          <include refid="column"></include>
        FROM user a
        WHERE a.del_flag = '0' AND a.id = #{token}
    </select>

    <!--api获取个人信息：评论条数，积分、优惠卷-->
    <select id="findUserCenter" resultType="java.util.Map">
        SELECT
            a.nick_name AS "nickName",
            a.avatar_url AS "avatarUrl",
            (SELECT count(*) AS "scoreCount" FROM user_score WHERE del_flag = '0' AND open_id = #{openId}) AS "scoreCount",
            (SELECT count(*) AS "commentCount" FROM comment WHERE del_flag = '0' AND open_id = #{openId}) AS "commentCount",
            (SELECT count(*) AS "couponCount" FROM user_coupon WHERE del_flag = '0' AND open_id = #{openId}) as "couponCount"
        FROM user a
        WHERE a.del_flag = '0' AND a.open_id = #{openId}
    </select>

</mapper>